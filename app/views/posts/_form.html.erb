<%= form_with(model: post, local: true) do |form| %>
  <% if post.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(post.errors.count, "error") %> prohibited this post from being saved:</h2>

      <ul>
      <% post.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div classz="field">
    <h3>挑戦状を選択（任意）</h3>
    <%= form.collection_select :task_id, Task.all, :id, :body, :include_blank => "挑戦しない" %>
  </div>

  <div class="image_field">
    <label for="post_image">
      <%= form.file_field :meshim, id: :post_image,
          accept: 'image/jpg,image/jpeg,image/png,image/gif' %>
      <div class="select-file">
        <%= image_tag @post.meshim.url, id: :post_image_prev %>
      </div>
    </label>
    
  </div>

  <div class="field">
    <h3><%= "名(十二文字以内)" %></h3>
    <%= form.text_field :title , class: "js_counter"%>
    <%if @post.title.nil? %>
      <span> 0 文字</span>
    <% else %>
      <span><%= @post.title.length %> 文字</span>
    <% end %>
    <span> / 12 文字</span>
  </div>

  <div class="field">
    <h3><%= "作り方(四十文字以内)" %></h3>
    <%= form.text_area :body,  size: "20x3", class: "js_counter"%>
    <%if @post.body.nil? %>
      <span> 0 文字</span>
    <% else %>
      <span><%= @post.body.length %> 文字</span>
    <% end %>
    <span> / 40 文字</span>
  </div>

  <div class="back-or-action">
    <div class="back">
      <%= link_to "撤回", posts_path, { :class => "file" } %>
    </div>
    <div class="actions">
      <%= form.submit "完 了" %>
    </div>
  </div>
  
<% end %>

<script type="text/javascript">
$(function() {
 function readURL(input) {
   if (input.files && input.files[0]) {
     var reader = new FileReader();
     reader.onload = function (e) {
       $(".select-file").empty();
       $(".select-file").append($('<img>').attr({
          src: e.target.result,
          id: "post_image_prev",
       }));
     }
     reader.readAsDataURL(input.files[0]);
   } else {
       $(".select-file").empty();
       $(".select-file").append($('<img>').attr({
          src: "<%= asset_path("default_post.png") %>",
          id: "post_image_prev",
       }));
   }
 }
 $("#post_image").change(function(){
   readURL(this);
 });
});

(function($) {

  $.fn.charCount = function(options){

    var defaults = {
      cE: $(this).next(), 
      cW: 'font-red',
      cS: 'font-green'
    };

    //オプションがあるならここでデフォルトに上書き
    var options = $.extend(defaults, options);  

    $(this).keyup(function(){
      //改行を文字としてカウント
      var count = $(this).val().replace(/(\r\n|\r|\n)/g, "\r\n").length;
      //データ属性としてもたせた「最低文字数」を取得
      var Num = $(this).parent().data("counter");
      var hoge = Num - count;
      if(hoge >= 0){
        $(options.cE).removeClass(options.cS).addClass(options.W);
      } else {
        $(options.cE).removeClass(options.cW).addClass(options.cS);
      }
      $(this).parent().find(options.cE).html(count + ' 文字');
    });

  }

})(jQuery);

$(function(){

  $(".js_counter").charCount();

});

</script>